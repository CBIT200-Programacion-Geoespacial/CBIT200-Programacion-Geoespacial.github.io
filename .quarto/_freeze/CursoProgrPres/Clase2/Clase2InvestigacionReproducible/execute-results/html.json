{
  "hash": "e5f748aaf7467931a94fd812bc1a3761",
  "result": {
    "markdown": "---\ntitle: \"Investigación reproducible y github\"\nauthor: \"Derek Corcoran\"\ndate: \"08/08, 2023\"\noutput:\n  ioslides_presentation:\n    widescreen: true\n    incremental: true\n---\n\n\n\n\n## Que es la investigación reproducible?\n\n\n::: {.cell}\n\n:::\n\n\n* Código, datos (**Crudos**) y texto entrelazados\n* en R: Rmarkdown (Rmd)\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Reproducible.png){width=1000px}\n:::\n:::\n\n\n# Github\n\n## Github\n\n* Como \"Google Drive\" o \"Dropbox\" para código\n* Control de cambios (Podemos volver a cualquier versión anterior)\n* En base a codigo (idealmente), pero hay GUIs\n* Cada proyecto es un repositorio\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Octocat.png){width=400}\n:::\n:::\n\n\n## Crear primer repositorio\n\n- Crearse cuenta en github.com\n- Crear repositorio en github\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](StartAProject.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Crear primer repositorio\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](NombreRepo.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Copiar la url\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](GitAdress.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Volvamos a RStudio\n\n* Creamos un proyecto nuevo\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](NewProject.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Pegamos la URL \n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](GitRstudio.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## La nueva pestaña git\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](GitPan.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Los \"¿tres?\" pasos de un repositorio \n\n* **Git add:** Agregar a los archivos que vas a guardar\n* **Git commit:** Guardar en el repositorio local (Mi computador)\n* **Git push:** Guardar en el repositorio remoto (En la nube)\n* Otros como git merge, git pull, git clone, etc\n\n## Git Add\n\n* Sumar un archivo al repositorio\n* ¿Cuando no hacerlo?\n    + Limite de un archivo de 100 Mb\n    + Límite de un repositorio de un Gb\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](GitAdd.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Git commit\n\n* Con esto dices quiero guardar mis cambios en mi disco duro\n* Se guarda en tu repositorio local (Tu computador)\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](Commit.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Mensaje del commit\n\n* Debe ser relevante (ejemplo, no poner *Version final ahora si*)\n* Si te equivocas puedes restablecer a cualquier commit anterior (si sabes cual es)\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](MensajeCommit.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## A guardar el repositorio (git push)\n\n* Con esto subes tu commit a la nube (queda respaldado)\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.75'}\n::: {.cell-output-display}\n![](Push.png){fig-align='center' width=80%}\n:::\n:::\n\n\n# Clásico error\n\n## Configurar github\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngit config --global user.name \"derek-corcoran-barrios\"\ngit config --global user.email \"derek-corcoran-barrios@gmail.com\"\n```\n:::\n\n\n## Si no resulta\n\n* Si estas en windows instala [git](https://git-scm.com/download/win)\n* Si estas en [mac](https://git-scm.com/download/mac)\n* Si estas en linux \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsudo apt-get update\nsudo apt-get install git\n```\n:::\n\n\n# Dudas?\n\n## Reproducibilidad en R\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Rmark.png){fig-align='center' width=30%}\n:::\n:::\n\n\n1. Una carpeta\n    + Datos crudos (csv, xls, html, json)\n    + Codigo y texto (Rmd, Rpres, shiny)\n    + Resultados (Manuscrito, Pagina Web, App)\n\n## Antes de empezar (importar datos)\n\n* Hasta ahora hemos usado `data` (sólo para bases incorporadas en R)\n* Desde hoy usaremos `read_csv` (Para csv, para otros archivos hay otras funciones)\n* Otro tipo de datos son los `.rds`, todo puede ser transformado a este formato\n\n## Datos para trabajar {.small}\n\n* Puedes hacer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nplants <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-18/plants.csv\")\n```\n:::\n\n\no\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplants <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-18/plants.csv\")\n```\n:::\n\n\n## Crear un nuevo Rmarkdown\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](https://archive.org/download/NewRmd/NewRmd.png){fig-align='center' width=100%}\n:::\n:::\n\n\n# Esta vez usaremos un template de un `github document`\n\n## Partes de un Rmd\n\n<div class=\"columns-2\">\n  1. Texto\n  2. Chunks\n  3. Inline code\n  4. [Cheat sheet Rmd](https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf)\n  5. El botón mágico **Knit**\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](RMDexample.png){width=354}\n:::\n:::\n\n\n</div>\n\n## Texto\n\n[link](https://stackoverflow.com/users/3808018/derek-corcoran)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Titulo\n\n## subtitulo\n\n*cursiva*\n\n**negrita**\n\n[link](https://stackoverflow.com/users/3808018/derek-corcoran)\n```\n:::\n\n\n\n## Chunks\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Chunk.png){width=100%}\n:::\n:::\n\n\n\n# Ejemplo 1\n\n## Elijamos solo plantas de Chile {.build}\n\n* En nuestro Rmd hagamos un data.frame solo con plantas de chile\n* Elijamos solo las columnas de especie\n\n## Ejemplo 2\n\n* En nuestro Rmd hagamos un data.frame resumen, de número de plantas extintas por país de America del Sur\n* Ahora subamoslo a github\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}