{"title":"Introducción: Principios básicos","markdown":{"yaml":{"title":"Introducción: Principios básicos","editor_options":{"markdown":{"wrap":72}}},"headingText":"Introducción","containsRefs":false,"markdown":"\n\n```{=html}\n<!-- # El tidyverso {#tidy}\n\nEn esta clase empezaremos a trabajar en r, puedes seguir la presentación en el siguiente [link](https://derek-corcoran-barrios.github.io/CursoProgrPres/Clase1/Clase1TidyData.html), y a continuación tienes el link de la clase online en youtube:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/pr6dMwtto0w\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n-->\n```\n\nR es un entorno y lenguaje de programación con un enfoque al análisis\nestadístico. Permite hacer todos los análisis numéricos que requieras en\ntu vida profesional. Es una implementación de libre distribución de otro\nprograma estadístico de uso comercial, S. Al ser software libre, es la\ncomunidad de usuarios la que guía su desarrollo, transformándolo en uno\nde los programas más versátiles para trabajos cuantitativos existentes\nhoy en día. La página principal desde la que se puede acceder a los\narchivos y documentación necesarias para su utilización es:\n\n[www.r-project.org](http://www.r-project.org)\n\nSin embargo, para trabajar ....... utilizaremos R studio: Un Entorno de\nDesarrollo Integrado (IDE) que, al igual que R, es software libre y\npermite integrar herramientas necesarias para el desarrollo y así\nfacilitarlo. La página oficial para descargarlo es:\n\n[www.rstudio.com](http://www.rstudio.com)\n\n**Objetos:**\n\nEn términos genéricos, todos los elementos que R maneja son objetos. Un\nobjeto tiene ciertas propiedades y en ocasiones es capaz de llevar a\ncabo ciertas tareas si se le dan los argumentos necesarios. Por ejemplo,\nun teléfono es capaz de realizar llamadas siempre que le demos el número\na marcar.\n\n**Variables**\n\nAl momento de trabajar, es probable que necesitemos guardar valores o\ncálculos, de manera que no necesitemos escribirlos cada vez que los\nusemos, para esto utilizamos variables.\n\nPara realizar una asignación de variable:\n\n```{r }\na = 200\n```\n\nLuego, podemos utilizar el valor contenido en la variable, utilizando su\nnombre:\n\n```{r }\nprint(a)\n```\n\n**Tipos de variables:**\n\nExisten diversos tipos o clases de variables, dependiendo de las\ncaracterísticas del objeto que les es asignado. Para conocer a qué tipo\ncorresponde un objeto usamos class:\n\n```{r}\nx=7\nx\nclass (x)\n```\n\n```{r}\nx=5/3\nx\nclass (x)\n```\n\n```{r}\nx=\"Trece\"\nx\nclass (x)\n```\n\n**Funciones:**\n\nMuchas cosas en R pueden hacerse a través del uso de funciones, estas\npermiten realizar operaciones típicas sin necesidad de escribir grandes\ncantidades de código. Por ejemplo:\n\n```{r}\nsqrt(10)\nround(1.9)\nseq(0,10)\nseq(0,10,2)\nrep(5,10)\npaste(seq(5,10), \"elefantes\")\n```\n\nLos datos o variables que van dentro de las funciones, se denominan\n*argumentos* y cada función requiere que se le entreguen los argumentos\napropiados para ejecutar la acción prevista.\n\nPor ejemplo, la función mean() no puede calcular el promedio si como\nargumentos se le pasan letras.\n\n```{r}\nmean(c(\"a\",\"b\",\"c\"))\n```\n\nEsto es importante, porque al introducir datos podemos estar utilizando\nnúmeros como palabras:\n\n1, 2, 3 ≠ \"1\", \"2\", \"3\"\n\nSi nos encontramos con este problema, debemos transformar los datos al\ntipo o clase adecuada, con las funciones:\n\n`as.numeric()` y `as. character()`x\\`\n\n**Vectores:**\n\nConjunto ordenado de valores del mismo tipo, agrupados en un único\nobjeto. Para crear una variable vector utilizamos:\n\n```{r}\nv = c(1,1,2,3)\nvector = c(\"mi\", \"primer\", \"vector\")\nvector\n```\n\nCada objeto dentro de un vector posee un índice, el cual indica la\nposición que ocupa dentro del vector, para acceder a una posición\nespecífica usamos:\n\n```{r}\nvector[1]\nvector[2]\nvector[3] \n```\n\ny si queremos reemplazar alguno de esos objetos:\n\n```{r}\nvector[2]=\"segundo\"\nvector\n```\n\nUn vector permite almacenar varios valores en una única variable y\npermite ejecutar operaciones o funciones a un conjunto de datos:\n\n```{r}\nvector = c(1,2,3,4,5)\nvector*2\nvector^2\n```\n\no incluso realizar operaciones entre vectores:\n\n```{r}\nv1=c(1:3)\nv2=c(6,8,10)\n```\n\n```{r}\nv1\nv2\n```\n\n```{r}\nv1 + v2\n```\n\n```{r}\nv1*v2\n```\n\n```{r error=TRUE, echo = T, results = 'hide'}\nv3=c(\"a\",\"b\",\"c\")\nv1 * v3\n```\n\n**Data frame:**\n\n**Instalar librerías:**\n\nMuchas veces las funciones incorporadas en R son insuficientes para\nnuestros fines, por lo que es necesario instalar paquetes o \"packages\"\nde herramientas hechas por la comunidad. En este caso, usaremos el\npaquete \"openxlsx\", que nos permite leer archivos Excel. Para\ninstalarlo:\n\n```{r eval=FALSE}\ninstall.packages(\"openxlsx\")\n```\n\nDebe hacerse una única vez, los paquetes quedan instalados en nuestra\nversión de R. Y para usarlo dentro de nuestro proyecto:\n\n```{r eval=FALSE}\nlibrary(openxlsx)\n```\n\nDebe incluirse en cada proyecto donde queramos usarlo y ejecutarse cada\nvez que abrimos R.\n\n**R Notebook**\n\nUn Notebook en R es un documento con bloques o \"chunks\" que pueden ser\nejecutados directa e interactivamente, para así visualizar los\nresultados directamente bajo el código.\n\nPara instalar esta librería:\n\n```{r eval=FALSE}\ninstall.packages(\"rmarkdown\")\n```\n\nUna vez instalada, puedes crear un nuevo notebook en RStudio llendo a\n*File -\\> new file -\\> R notebook*.\n\nAgrega un nuevo chunk haciendo click en el botón *Insert Chunk* en la\nbarra de herramientas o presionando *Ctrl+Alt+I*\n\nUn chunk puede ser ejecutado usando:\n\n1.  Haciendo click en el triángulo verde o \"Run Current Chunk\" en la\n    esquina superior derecha de cada chunk.\n\n2.  Clickeando al interior de un chunk y presionando *Ctrl + Enter*.\n\nDe ambas formas se ejecutará todo el código contenido dentro de el\nchunk.\n\nCuando guardas ul notebook, un archivo HTML que contiene el código y los\nresultados se guardará junto a él (Click en el botón de *Preview* o\npresiona *Ctrl+Shift+K* para previsualizar el archivo HMTL)\n\n**Leer datos:**\n\nDelimitados por coma: read_csv(\"file.csv\")\n\nCon cualquier delimitador: read_delim(\"file.txt\", delim = \"\\|\")\n\n........\n\n**tidyr?**\n\n**Bajar archivos de la web:**\n\n**Construcción de set de datos:**\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"01-intro.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.335","theme":"cosmo","title":"Introducción: Principios básicos","editor_options":{"markdown":{"wrap":72}}},"extensions":{"book":{"multiFile":true}}}}}