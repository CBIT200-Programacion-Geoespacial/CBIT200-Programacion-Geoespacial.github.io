{"title":"Graficando mapas","markdown":{"yaml":{"title":"Graficando mapas","author":"Derek Corcoran","date":"`r format(Sys.time(), '%d/%m, %Y')`","output":{"ioslides_presentation":{"widescreen":true,"incremental":true}}},"headingText":"Objetivos de hoy","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = FALSE, tidy = TRUE, tidy.opts= list(blank = FALSE, width.cutoff = 60), fig.align='center')\noptions(\"kableExtra.html.bsTable\" = T)\n```\n\n\n-   Graficando Polígonos (y projecciones)\n    -   Escalas de colores\n-   Puntos\n    -   Nombres de lugares\n    -   Escalas diferentes\n    -   Separación de nombres\n-   Exportar gráficos en alta calidad\n    -   Que nos pide una revista\n-   Rasters\n    -   Variables categóricas\n    -   Cambiar las projecciones\n-   Inset maps\n\n## Cargamos paquetes\n\n```{r}\nlibrary(ggforce)\nlibrary(scales)\nlibrary(raster)\nlibrary(rworldxtra)\nlibrary(sf)\nlibrary(tidyverse)\n```\n\n# Polígonos\n\n## Partimos con un gráfico básico\n\n```{r,eval=FALSE}\n# Base de datos\n\ngithubURL <- (\"https://raw.githubusercontent.com/derek-corcoran-barrios/derek-corcoran-barrios.github.io/master/Presentaciones_Espacial/Casos_Activos_Valpo.rds\")\n\n# La descargamos\n\ndownload.file(githubURL,\"Casos_Activos_Valpo.rds\")\n\n# La leemos\n\nCasos_Activos_Valpo <- readRDS(\"Casos_Activos_Valpo.rds\")\n\n# Gráfico simple\n\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha)\n```\n\n## Partimos con un gráfico básico (cont.)\n\n```{r,echo= F}\n# Base de datos\n\ngithubURL <- (\"https://raw.githubusercontent.com/derek-corcoran-barrios/derek-corcoran-barrios.github.io/master/Presentaciones_Espacial/Casos_Activos_Valpo.rds\")\n\n# La descargamos\n\ndownload.file(githubURL,\"Casos_Activos_Valpo.rds\")\n\n# La leemos\n\nCasos_Activos_Valpo <- readRDS(\"Casos_Activos_Valpo.rds\")\n\n# Gráfico simple\n\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha)\n```\n\n## Modifiquemos la escala\n\n-   Experimentemos con el número de colores\n\n```{r, eval = F}\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_gradientn(name = \"Activos por 100.000 hab\",\n                       colours = heat.colors(10))\n```\n\n## Modifiquemos la escala (cont)\n\n```{r, echo= F}\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_gradientn(name = \"Activos por 100.000 hab\",\n                       colours = heat.colors(10))\n```\n\n## Otras paletas de colores\n\n-   rainbow\n-   terrain.colors\n-   topo.colors\n-   cm.colors\n\nEjemplo feo\n\n```{r, eval = F}\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_gradientn(name = \"Activos por 100.000 hab\",\n                       colours = rainbow(10))\n```\n\n## Cuando es feo se nota por que es importante\n\n```{r, echo = F}\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_gradientn(name = \"Activos por 100.000 hab\",\n                       colours = rainbow(10))\n```\n\n## Viridis\n\n```{r, eval = T}\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_viridis_c(name = \"Activos por 100.000 hab\")\n```\n\n## Escala por bins\n\n```{r, eval = T}\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_binned(name = \"Activos por 100.000 hab\")\n```\n\n## Cambiando algunos default\n\n-   breaks: donde se cortan los bins\n\n```{r, eval=FALSE}\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_binned(name = \"Activos por 100.000 hab\", \n                    breaks = seq(0,200, by = 25))\n```\n\n## Escala gradient2\n\n-   Algunos parametros importantes\n    -   mid = color de punto medio\n    -   high = color de valor alto\n    -   low = color de valor bajo\n    -   mipoint = que valor se considera medio\n\n```{r, eval=F}\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) + \n  facet_wrap(~Fecha) + \n  scale_fill_gradient2(mid = \"white\", \n                       low = muted(\"blue\"), \n                       high = muted(\"red\"), \n                       midpoint = median(Casos_Activos_Valpo$Activos_por_100.000),\n                       name = \"Activos por 100.000 hab\")\n```\n\n## Escala gradient2\n\n```{r, echo = F}\nggplot() + geom_sf(data = Casos_Activos_Valpo, aes(fill = Activos_por_100.000)) + \n  facet_wrap(~Fecha) + \n  scale_fill_gradient2(mid = \"white\", \n                       low = muted(\"blue\"), \n                       high = muted(\"red\"),\n                       midpoint = median(Casos_Activos_Valpo$Activos_por_100.000),\n                       name = \"Activos por 100.000 hab\")\n```\n\n## últimos toques\n\n-   Punto de referencia del MINSAL 40 por cada 100.000 (midpoint)\n-   Agregamos titulo, subtitulo y fuente al pie\n-   Leyenda abajo\n-   lineas mas tenues\n\n```{r, eval = F}\nggplot() + geom_sf(data = Casos_Activos_Valpo, size = 0.05, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_gradient2(mid = \"white\", low = muted(\"blue\"), high = muted(\"red\"), midpoint = 40, name = \"Activos por 100.000 hab\") +\n  theme(legend.position = \"bottom\") + \n  labs(title = \"Prevalencia de Región de Valparaíso por Provincia\", \n       subtitle = paste(\"Actualizado\", max(CasosActivosCurso$Fecha)), \n       caption = \"Datos: https://github.com/MinCiencia/Datos-COVID19\",\n       y = NULL,\n       x = NULL)\n```\n\n## Mapa final\n\n```{r, echo = FALSE}\nggplot() + geom_sf(data = Casos_Activos_Valpo, size = 0.05, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_gradient2(mid = \"white\", low = muted(\"blue\"), high = muted(\"red\"), midpoint = 40, name = \"Activos por 100.000 hab\") +\n  theme(legend.position = \"bottom\") + \n  labs(title = \"Prevalencia de Región de Valparaíso por Provincia\", \n       subtitle = paste(\"Actualizado\", max(Casos_Activos_Valpo$Fecha)), \n       caption = \"Datos: https://github.com/MinCiencia/Datos-COVID19\",\n       y = NULL,\n       x = NULL)\n```\n\n# Puntos\n\n## Bajaremos puntos desde la biblioteca naciona\n\n-   Mapas [vectoriales de Chile](https://www.bcn.cl/siit/mapas_vectoriales/index_html)\n-   Ciudades y mas\n\n```{r}\n# Bajamos el archivo\n\ndownload.file(\"https://www.bcn.cl/obtienearchivo?id=repositorio/10221/10400/2/Toponimos.zip\", destfile = \"Topo.zip\")\n\n# Lo descomprimimos\n\nunzip(\"Topo.zip\")\n\n## Leemos el shapefile y nos quedamos solo con valparaíso continenal\n\nTopo <- read_sf(\"Toponimos.shp\") %>% \n  dplyr::filter(Region == \"DE VALPARAISO\") %>% \n  st_crop(Casos_Activos_Valpo)\n```\n\n```{r, echo = FALSE}\nfile.remove(\"Topo.zip\")\nfile.remove(list.files(pattern = \"Toponimos\"))\n```\n\n## Partamos con el mapa anterior de base:\n\n```{r}\nMapa <- ggplot() + geom_sf(data = Casos_Activos_Valpo, size = 0.05, aes(fill = Activos_por_100.000)) +\n  facet_wrap(~Fecha) + \n  scale_fill_gradient2(mid = \"white\", low = muted(\"blue\"), high = muted(\"red\"), midpoint = 40, name = \"Activos por 100.000 hab\") +\n  theme(legend.position = \"bottom\") + \n  labs(title = \"Prevalencia de Región de Valparaíso por Provincia\", \n       subtitle = paste(\"Actualizado\", max(Casos_Activos_Valpo$Fecha)), \n       caption = \"Datos: https://github.com/MinCiencia/Datos-COVID19\",\n       y = NULL,\n       x = NULL)\n```\n\n## Agreguemos los puntos\n\n```{r}\nMapa + geom_sf(data = Topo)\n```\n\n## Quitemos puntos\n\n```{r}\nTopo2 <- Topo %>% dplyr::filter(Clase_Topo %in% c(\"Centro Poblado\"))\n\nTopo$Clase_Topo %>% unique()\n```\n\n## Sigue siendo mucho\n\n```{r}\nMapa + geom_sf(data = Topo2)\n```\n\n## Dejemos solo las capitales provinciales\n\n```{r}\nTopo2 <- Topo %>% \n  dplyr::filter(Nombre %in% c(\"Los Andes\", \"Quilpué\",\"La Ligua\", \"Quillota\", \n                              \"San Antonio\", \"San Felipe\", \"Valparaíso\"),\n                Clase_Topo %in% c(\"Centro Poblado\"))\n```\n\n## Mejor!!\n\n```{r}\nMapa + geom_sf(data = Topo2)\n```\n\n## Agreguemos los nombres\n\n```{r}\nMapa + \n  geom_sf(data = Topo2) +\n  geom_sf_text(data = Topo2, aes(label = Nombre))\n```\n\n## Problemas\n\n-   Tapan los puntos y chocan los nombres\n-   ggrepel\n-   cambio de tema\n\n```{r, eval=FALSE}\nMapa + \n  geom_sf(data = Topo2) +\n  ggrepel::geom_text_repel(\n    data = Topo2,\n    aes(label = Nombre, geometry = geometry),\n    stat = \"sf_coordinates\",\n    force = 1\n  ) + theme_bw()\n```\n\n## Listos?\n\n```{r, echo = FALSE}\nMapa + \n  geom_sf(data = Topo2) +\n  ggrepel::geom_text_repel(\n    data = Topo2,\n    aes(label = Nombre, geometry = geometry),\n    stat = \"sf_coordinates\",\n    force = 1\n  ) + theme_bw()\n```\n\n# Exportando archivos\n\n## Usando tif\n\n```{r}\ntiff('Mapa.tiff', units=\"in\", width=10, height=5, res=600, compression = 'lzw')\n\nMapa + \n  geom_sf(data = Topo2) +\n  ggrepel::geom_text_repel(\n    data = Topo2,\n    aes(label = Nombre, geometry = geometry),\n    stat = \"sf_coordinates\",\n    force = 1\n  ) + theme_bw()\n\ndev.off()\n```\n\n-   Se puede usar bmp, jpeg, png, svg, cairo_pdf\n\n```{r, echo =F}\n\nfile.remove('Mapa.tiff')\n\n```\n\n# Rasters\n\n## Prioridades de conservación en el neotrópico\n\n-   De este [paper](https://onlinelibrary.wiley.com/doi/full/10.1111/ecog.05166)\n-   De [acá](https://figshare.com/collections/Hannah_et_al_2020_Ecography/4868019) pueden bajarlo para otros continentes\n\n```{r}\ndownload.file(\"https://ndownloader.figshare.com/files/21843771\", destfile = \"Priority.tiff\")\n\nPriority <- raster(\"Priority.tiff\")\n\nplot(Priority, colNA = \"black\")\n```\n\n```{r}\nPriority <- readAll(Priority)\nfile.remove(\"Priority.tiff\")\n```\n\n## Polígono para el mismo lugar\n\n```{r}\ndata(\"countriesHigh\")\nSA <- countriesHigh %>% st_as_sf()  %>% st_make_valid() %>% st_crop(extent(Priority))\nggplot() + geom_sf(data = SA)\n```\n\n## Cambiando Priority\n\n```{r}\n## Cambiamos los NA a 0\nvalues(Priority) <- ifelse(is.na(values(Priority)), 0, values(Priority))\n\n## Generamos un raster de todo el neotropico con valores de 1\n\nMASK <- rasterize(SA, Priority, field = 1)\n\n## Multiplicamos para dejar 0s e prioridad\n\nPriority <- Priority*MASK\n\n## Achicamos el extent\n\nPriority <- raster::trim(Priority)\n```\n\n## Transformamos las prioridades en categorías\n\n-   Valores de 1 es el 17%\n-   Valores de 0.87 son el 30%\n-   Valores de 0 son lugares muy desarrollados (Agricultura o ciudad)\n\n```{r}\nPriority2 <- Priority %>% as(\"SpatialPixelsDataFrame\") %>% \n  as.data.frame() %>% rename(Priority = layer) %>% \n  mutate(Priority = case_when(Priority >= 0.97 ~ \"Prioridad muy alta\",\n                              Priority < 1 & Priority > 0.87 ~ \"Prioridad alta\",\n                              Priority == 0 ~ \"Altamente desarrollado\")) %>% \n  dplyr::filter(!is.na(Priority)) %>% mutate(Priority = fct_relevel(Priority,\"Prioridad alta\", \"Prioridad muy alta\"))\n\n\n\nP  <- ggplot() + geom_sf(data = SA, size = 0.1) + geom_raster(data = Priority2, aes(x = x, y = y, fill = Priority))\n```\n\n## Veamos que tal\n\n```{r, echo = F}\nP\n```\n\n## Mejoremos los colores\n\n```{r}\nP <- P + scale_fill_manual(name = \"Priority\",values = c(\"#006d2c\",\"#31a354\",\"#d7c29e\"))\n```\n\n```{r, echo = F}\nP\n```\n\n## Avancemos más\n\n```{r}\nP <- P + ylab(\"\") + xlab(\"\") + theme_bw()\n```\n\n```{r, echo = F}\nP\n```\n\n## Inset map\n\n```{r}\nP <- P + facet_zoom(xlim = c(-87.117, -82.56), ylim = c(5.51, 11.21), horizontal = T, zoom.size = 0.8, shrink = F) \n```\n\n```{r, echo = F}\nP\n```\n\n## Exportamos\n\n```{r}\ntiff('Priority.tiff', units=\"in\", width=10, height=8, res=600, compression = 'lzw')\n\nP\n\ndev.off()\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"ioslides_presentation":{"widescreen":true,"incremental":true}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"Clase10_Mapas.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.335","theme":"cosmo","title":"Graficando mapas","author":"Derek Corcoran","date":"`r format(Sys.time(), '%d/%m, %Y')`"},"extensions":{"book":{"multiFile":true}}}}}