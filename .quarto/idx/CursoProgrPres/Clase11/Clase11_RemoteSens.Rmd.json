{"title":"Remote sensing","markdown":{"yaml":{"title":"Remote sensing","author":"Derek Corcoran","date":"`r format(Sys.time(), '%d/%m, %Y')`","output":{"ioslides_presentation":{"widescreen":true,"incremental":true}}},"headingText":"¿Qué son los sensores remotos?","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = T, tidy = TRUE, tidy.opts= list(blank = FALSE, width.cutoff = 60), fig.align='center', eval = F)\n\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(raster)\nlibrary(rworldxtra) \nlibrary(kableExtra)\noptions(\"kableExtra.html.bsTable\" = T)\n```\n\n\n## Sensores remotos\n\n-   Datos satelitales\n-   Distintas resoluciones\n    -   Resolución espacial (Tamaño del grano)\n    -   Resolución temporal (Cada cuanto se toman los datos)\n    -   Espectro (Distintas bandas)\n\n## Algunos sensores remotos\n\n-   Modis\n-   Landsat\n-   Sentinel\n\n## Landsat\n\n- Van 9 misiones (1972 -- )\n\n```{r, echo = F}\nknitr::include_graphics(\"https://upload.wikimedia.org/wikipedia/en/timeline/5dqkflwpa9adezwbqqhk8fio51mzy9k.png\")\n\n```\n\n- Chequear coincidencia entre satélites\n\n## Datos landsat\n\n```{r, echo = F}\nLandsat <- tibble::tribble(\n                                   ~Bands, ~`Wavelength.(micrometers)`, ~`Resolution.(meters)`,\n  \"Band 1 - Ultra Blue (coastal/aerosol)\",             \"0.435 - 0.451\",                   \"30\",\n                          \"Band 2 - Blue\",             \"0.452 - 0.512\",                   \"30\",\n                         \"Band 3 - Green\",             \"0.533 - 0.590\",                   \"30\",\n                           \"Band 4 - Red\",             \"0.636 - 0.673\",                   \"30\",\n                           \"Band 5 - NIR\",             \"0.851 - 0.879\",                   \"30\",\n                        \"Band 6 - SWIR 1\",             \"1.566 - 1.651\",                   \"30\",\n                        \"Band 7 - SWIR 2\",             \"2.107 - 2.294\",                   \"30\",\n                  \"Band 8 - Panchromatic\",             \"0.503 - 0.676\",                   \"15\",\n                        \"Band 9 - Cirrus\",             \"1.363 - 1.384\",                   \"30\",\n                    \"Band 10 - Thermal 1\",             \"10.60 - 11.19\",            \"100* (30)\",\n                    \"Band 11 - Thermal 2\",             \"11.50 - 12.51\",            \"100* (30)\"\n  )\n\nkable(Landsat) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\")) %>% \n  scroll_box(width = \"800px\", height = \"600px\")\n```\n\n## Datos Landsat \n\n\n```{r, echo = F, out.width = \"900px\", out.height= \"400px\",fig.cap=\"Wikipedia\"}\nknitr::include_graphics(\"https://upload.wikimedia.org/wikipedia/commons/0/02/The_spectral_band_placement_for_each_sensor_of_Landsat.jpg\")\n```\n\n## Sentinel 2\n\n-   Mayor resolución\n\n```{r , echo = F}\nSentinel <- tibble::tribble(\n                             ~Banda,    ~nm,  ~nmw,    ~V4,  ~V5, ~V6,\n      \"Band 1 – Coastal aerosol\",  442.7,  21L,  442.2,  21L, 60L,\n                 \"Band 2 – Blue\",  492.4,  66L,  492.1,  66L, 10L,\n                \"Band 3 – Green\",  559.8,  36L,    559,  36L, 10L,\n                  \"Band 4 – Red\",  664.6,  31L,  664.9,  31L, 10L,\n  \"Band 5 – Vegetation red edge\",  704.1,  15L,  703.8,  16L, 20L,\n  \"Band 6 – Vegetation red edge\",  740.5,  15L,  739.1,  15L, 20L,\n  \"Band 7 – Vegetation red edge\",  782.8,  20L,  779.7,  20L, 20L,\n                  \"Band 8 – NIR\",  832.8, 106L,  832.9, 106L, 10L,\n          \"Band 8A – Narrow NIR\",  864.7,  21L,    864,  22L, 20L,\n         \"Band 9 – Water vapour\",  945.1,  20L,  943.2,  21L, 60L,\n       \"Band 10 – SWIR – Cirrus\", 1373.5,  31L, 1376.9,  30L, 60L,\n                \"Band 11 – SWIR\", 1613.7,  91L, 1610.4,  94L, 20L,\n                \"Band 12 – SWIR\", 2202.4, 175L, 2185.7, 185L, 20L\n)\n\nkable(Sentinel) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\")) %>% \n  scroll_box(width = \"800px\", height = \"600px\")\n\n```\n\n# RGEE\n\n## Google Earth Engine\n\n-   Servidores de google para [calculos geoespaciales](https://earthengine.google.com/)\n-   Gran cantidad de [bases de datos](https://developers.google.com/earth-engine/datasets/) disponibles\n-   Tutorial en [español](https://barja8.github.io/Handbook_rgee/pdf/vol01.pdf)\n-   Veamos [NDVI](https://developers.google.com/earth-engine/datasets/catalog/LANDSAT_LE07_C01_T1_8DAY_NDVI) de Landsat 7\n\n## NDVI\n\n```{r, echo = F, out.width=\"50%\"}\nknitr::include_graphics(\"https://www.agricolus.com/wp-content/uploads/2018/05/NDVI_healthy_stressed.png\")\n```\n\n-   entre -1 y 1\n\n## Empezemos el rgee\n\n```{r, eval = F}\nlibrary(rgee)\nee_Initialize()\n```\n\n-   Leamos la capa de google earth engine\n\n```{r, eval = F}\ncol<-ee$ImageCollection('COPERNICUS/S2_SR')\n```\n\n-   Filtramos por latitud y longitud y por fecha\n\n```{r, eval = F}\npoint <- ee$Geometry$Point(-71.6002957, -33.0055093)\nstart <- ee$Date(\"2020-02-11\")\nend <- ee$Date(\"2020-02-20\")\nfilter<-col$filterBounds(point)$filterDate(start,end)\nimg <- filter$first()\n```\n\n## Visualización\n\n-   Seleccionamos bandas\n\n```{r, eval = F}\nvPar <- list(bands = c(\"B4\", \"B3\", \"B2\"),\n             min = 100,max = 8000,             \n             gamma = c(1.9,1.7,1.7))\n```\n\n-   Visualizamos\n\n```{r, eval = F}\nMap$setCenter(-71.6002957, -33.0055093, zoom = 10)\nMap$addLayer(img, vPar, \"Color real\")\n```\n\n## Ahora NDVI\n\n-   Obtenemos el NDVI\n\n```{r, eval=F}\ngetNDVI <- function(image) {  \n  return(image$normalizedDifference(c(\"B8\", \"B4\")))\n  }\nndvi1 <- getNDVI(img)\n\n\nndviPar <- list(palette = c(  \n  \"#cccccc\", \"#f46d43\", \"#fdae61\", \"#fee08b\",  \"#d9ef8b\", \"#a6d96a\", \"#66bd63\", \"#1a9850\"),\n  min=0,max=1)\n```\n\n## ¿Cómo se vé?\n\n```{r, eval = F}\nMap$setCenter(-71.6002957, -33.0055093, zoom = 10)\nMap$addLayer(ndvi1, ndviPar, \"NDVI verano\")\n```\n\n# Análisis continuo\n\n## Más NDVI\n\n-   Leemos un polígono y lo tranformamos en fomrato `ee`\n\n```{r, eval = F}\nlibrary(raster)\nlibrary(sf)\nlibrary(tidyverse)\n\nee_x <- st_read(system.file(\"shape/nc.shp\", package = \"sf\")) \n\nValpoVina <- getData(\"GADM\", country = \"CHL\", level = 2) %>% \n  st_as_sf() %>% \n  dplyr::filter(NAME_1 == \"Valparaíso\", NAME_2 %in% c(\"Valparaíso\")) %>%\n  st_transform(st_crs(ee_x)) %>% \n  sf_as_ee()\n```\n\n## Cortamos NDVI\n\n-   Obtenemos NDVI para un año\n\n```{r, eval = FALSE}\nstart <- ee$Date(\"2020-01-01\")\nend <- ee$Date(\"2020-12-31\")\n\n\ncol<-ee$ImageCollection(\"LANDSAT/LE07/C01/T1_8DAY_NDVI\")\nfilter<-col$filterBounds(point)$filterDate(start,end)$select(\"NDVI\")\n\nee_ndvi_valpo <- ee_extract(x = filter, y = ValpoVina, sf = FALSE)\n\nee_ndvi_valpo2 <- ee_ndvi_valpo %>% pivot_longer(everything(), values_to = \"NDVI\") %>% mutate(Fecha = lubridate::ymd(str_remove_all(name, \"X\")))\n\nggplot(ee_ndvi_valpo2, aes(x = Fecha, y = NDVI)) + geom_path() + geom_point()\n```\n\n## Ahora veamos varios años\n\n```{r, eval = F}\nstart <- ee$Date(\"2014-01-01\")\nend <- ee$Date(\"2020-12-31\")\n\n\ncol<-ee$ImageCollection(\"LANDSAT/LE07/C01/T1_8DAY_NDVI\")\nfilter<-col$filterBounds(point)$filterDate(start,end)$select(\"NDVI\")\n\nee_ndvi_valpo <- ee_extract(x = filter, y = ValpoVina, sf = FALSE)\n\nee_ndvi_valpo2 <- ee_ndvi_valpo %>% pivot_longer(everything(), values_to = \"NDVI\") %>% mutate(Fecha = lubridate::ymd(str_remove_all(name, \"X\")))\nggplot(ee_ndvi_valpo2, aes(x = Fecha, y = NDVI)) + geom_path() + geom_point()\n```\n\n## Análisis\n\n-   ¿Qué pasa por día?\n\n```{r, eval = F}\nee_ndvi_valpo2 <- ee_ndvi_valpo2 %>% mutate(Dia = lubridate::yday(Fecha), Mes =  lubridate::month(Fecha))\n\nggplot(ee_ndvi_valpo2, aes(x = Dia, y = NDVI)) + geom_point()\n```\n\n-   ¿Qué pasa por mes?\n\n```{r, eval = F}\nee_ndvi_valpo_summary <- ee_ndvi_valpo2 %>% group_by(Mes) %>% summarise(sd = sd(NDVI), NDVI = mean(NDVI))\n\nggplot(ee_ndvi_valpo_summary, aes(x = Mes, y = NDVI)) + geom_ribbon(aes(ymax = NDVI + sd, ymin = NDVI -sd), alpha = 0.3, fill = \"red\") + geom_point() + geom_path()\n\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"ioslides_presentation":{"widescreen":true,"incremental":true}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"Clase11_RemoteSens.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.335","theme":"cosmo","title":"Remote sensing","author":"Derek Corcoran","date":"`r format(Sys.time(), '%d/%m, %Y')`"},"extensions":{"book":{"multiFile":true}}}}}